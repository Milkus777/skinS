# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YU3jA9qNMLX1GE8eU6X-rki1OFu5g5Nb
"""

from flask import Flask, request, jsonify, render_template
from tensorflow.keras.models import load_model
from tensorflow.keras.preprocessing import image
import numpy as np
import os

app = Flask(__name__)
model = load_model('model.keras')  # Убедитесь, что у вас есть model.keras

class_names = {
    'nv': 'Меланоцитарные невусы',
    'mel': 'Меланома',
    'bkl': 'Доброкачественные кератозоподобные поражения',
    'bcc': 'Базальноклеточная карцинома',
    'akiec': 'Актинические кератозы',
    'vasc': 'Сосудистые поражения',
    'df': 'Дерматофиброма'
}

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'Файл не загружен'}), 400

    img_file = request.files['file']
    img_path = os.path.join('uploads', img_file.filename)
    img_file.save(img_path)

    try:
        # Обработка изображения
        img = image.load_img(img_path, target_size=(224, 224))
        img_array = image.img_to_array(img) / 255.0
        img_array = np.expand_dims(img_array, axis=0)

        predictions = model.predict(img_array)[0]
        predicted_label = list(class_names.keys())[np.argmax(predictions)]
        confidence = float(predictions[np.argmax(predictions)])

        return jsonify({
            'prediction': class_names[predicted_label],
            'confidence': round(confidence * 100, 2),
            'label': predicted_label
        })
    except Exception as e:
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    os.makedirs('uploads', exist_ok=True)
    app.run(debug=False)